reverted:
--- b/glib/glib-init.c
+++ a/glib/glib-init.c
@@ -233,7 +233,6 @@
 {
   g_messages_prefixed_init ();
   g_debug_init ();
-  g_quark_init ();
 }
 
 #if defined (G_OS_WIN32)
reverted:
--- b/glib/glib-init.h
+++ a/glib/glib-init.h
@@ -25,8 +25,6 @@
 extern GLogLevelFlags g_log_always_fatal;
 extern GLogLevelFlags g_log_msg_prefix;
 
-void g_quark_init (void);
-
 #ifdef G_OS_WIN32
 #include <windows.h>
 
reverted:
--- b/glib/gquark.c
+++ a/glib/gquark.c
@@ -40,7 +40,6 @@
 #include "gthread.h"
 #include "gtestutils.h"
 #include "glib_trace.h"
-#include "glib-init.h"
 
 #define QUARK_BLOCK_SIZE         2048
 #define QUARK_STRING_BLOCK_SIZE (4096 - sizeof (gsize))
@@ -54,16 +53,6 @@
 static gchar         *quark_block = NULL;
 static gint           quark_block_offset = 0;
 
-void
-g_quark_init (void)
-{
-  g_assert (quark_seq_id == 0);
-  quark_ht = g_hash_table_new (g_str_hash, g_str_equal);
-  quarks = g_new (gchar*, QUARK_BLOCK_SIZE);
-  quarks[0] = NULL;
-  quark_seq_id = 1;
-}
-
 /**
  * SECTION:quarks
  * @title: Quarks
@@ -138,9 +127,10 @@
     return 0;
 
   G_LOCK (quark_global);
+  if (quark_ht)
+    quark = GPOINTER_TO_UINT (g_hash_table_lookup (quark_ht, string));
-  quark = GPOINTER_TO_UINT (g_hash_table_lookup (quark_ht, string));
   G_UNLOCK (quark_global);
+  
-
   return quark;
 }
 
@@ -179,7 +169,8 @@
 {
   GQuark quark = 0;
 
+  if (quark_ht)
+    quark = GPOINTER_TO_UINT (g_hash_table_lookup (quark_ht, string));
-  quark = GPOINTER_TO_UINT (g_hash_table_lookup (quark_ht, string));
 
   if (!quark)
     {
@@ -292,6 +283,13 @@
        */
       g_atomic_pointer_set (&quarks, quarks_new);
     }
+  if (!quark_ht)
+    {
+      g_assert (quark_seq_id == 0);
+      quark_ht = g_hash_table_new (g_str_hash, g_str_equal);
+      quarks[quark_seq_id] = NULL;
+      g_atomic_int_inc (&quark_seq_id);
+    }
 
   quark = quark_seq_id;
   g_atomic_pointer_set (&quarks[quark], string);
